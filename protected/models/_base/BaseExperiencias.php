<?php

/**
 * This is the model base class for the table "experiencias".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Experiencias".
 *
 * Columns in table "experiencias" available as properties of the model,
 * followed by relations of table "experiencias" available as properties of the model.
 *
 * @property integer $id
 * @property integer $Empresa
 * @property string $Inicio
 * @property string $Finalizacion
 * @property string $Jefe
 * @property integer $usuarios_id
 *
 * @property Usuarios $usuarios
 */
abstract class BaseExperiencias extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'experiencias';
    }

    public static function representingColumn() {
        return 'Inicio';
    }

    public function rules() {
        return array(
            array('Empresa, Inicio, Finalizacion, Jefe, usuarios_id', 'required'),
            array('Empresa, usuarios_id', 'numerical', 'integerOnly'=>true),
            array('Jefe', 'length', 'max'=>255),
            array('id, Empresa, Inicio, Finalizacion, Jefe, usuarios_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'usuarios' => array(self::BELONGS_TO, 'Usuarios', 'usuarios_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'Empresa' => Yii::t('app', 'Empresa'),
                'Inicio' => Yii::t('app', 'Inicio'),
                'Finalizacion' => Yii::t('app', 'Finalizacion'),
                'Jefe' => Yii::t('app', 'Jefe'),
                'usuarios_id' => Yii::t('app', 'Usuarios'),
                'usuarios' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('Empresa', $this->Empresa);
        $criteria->compare('Inicio', $this->Inicio, true);
        $criteria->compare('Finalizacion', $this->Finalizacion, true);
        $criteria->compare('Jefe', $this->Jefe, true);
        $criteria->compare('usuarios_id', $this->usuarios_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}