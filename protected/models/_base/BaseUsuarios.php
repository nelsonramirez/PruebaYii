<?php

/**
 * This is the model base class for the table "usuarios".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Usuarios".
 *
 * Columns in table "usuarios" available as properties of the model,
 * followed by relations of table "usuarios" available as properties of the model.
 *
 * @property integer $id
 * @property string $nombre
 * @property integer $telefono
 * @property string $email
 * @property integer $estado
 * @property string $genero
 * @property integer $ciudad_id
 *
 * @property Estudios[] $estudioses
 * @property Experiencias[] $experienciases
 * @property Folios[] $folioses
 * @property Ciudades $ciudad
 */
abstract class BaseUsuarios extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'usuarios';
    }

    public static function representingColumn() {
        return 'nombre';
    }

    public function rules() {
        return array(
            array('nombre, telefono, estado, genero, ciudad_id', 'required'),
            array('telefono, estado, ciudad_id', 'numerical', 'integerOnly'=>true),
            array('nombre', 'length', 'max'=>60),
            array('email', 'length', 'max'=>45),
            array('genero', 'length', 'max'=>1),
            array('email', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, nombre, telefono, email, estado, genero, ciudad_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'estudioses' => array(self::HAS_MANY, 'Estudios', 'usuarios_id'),
            'experienciases' => array(self::HAS_MANY, 'Experiencias', 'usuarios_id'),
            'folioses' => array(self::HAS_MANY, 'Folios', 'usuarios_id'),
            'ciudad' => array(self::BELONGS_TO, 'Ciudades', 'ciudad_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'nombre' => Yii::t('app', 'Nombre'),
                'telefono' => Yii::t('app', 'Telefono'),
                'email' => Yii::t('app', 'Email'),
                'estado' => Yii::t('app', 'Estado'),
                'genero' => Yii::t('app', 'Genero'),
                'ciudad_id' => Yii::t('app', 'Ciudad'),
                'estudioses' => null,
                'experienciases' => null,
                'folioses' => null,
                'ciudad' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('telefono', $this->telefono);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('estado', $this->estado);
        $criteria->compare('genero', $this->genero, true);
        $criteria->compare('ciudad_id', $this->ciudad_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}